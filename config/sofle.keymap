/*
 * sofie.keymap - Exemplo corrigido para hold-tap no encoder push
 *
 * - O encoder push usa "encoder_push_dual" (hold-tap).
 *   TAP = C_VOLUME_DOWN, HOLD = PG_DN.
 *
 * - Observe na declaração do comportamento `encoder_push_dual`
 *   o uso de `#binding-cells = <2>;` e
 *   `bindings = < &kp C_VOLUME_DOWN 0 &kp PG_DN 0 >;`
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    behaviors {
        /* Comportamento hold-tap customizado */
        encoder_push_dual: hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "Encoder Push Dual";

            /* IMPORTANTE: #binding-cells = <2> */
            #binding-cells = <2>;

            /* Ajuste o tapping-term se quiser */
            tapping-term-ms = <200>;

            /* Precisamos de DOIS valores para cada binding:
             * 1) keycode ou usage
             * 2) modificadores (ou 0 se não houver)
             */
            bindings = <
                &kp C_VOLUME_DOWN  0   /* Tap */
                &kp PG_DN          0   /* Hold */
            >;
        };
    };

    /* Ativação automática da camada ADJUST quando LOWER e RAISE estão ativas */
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            bindings = <
                &kp MINUS   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                         &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp GRAVE
                &kp ESC     &kp Q    &kp W    &kp E    &kp R    &kp T                          &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSPC
                &kp TAB     &kp A    &kp S    &kp D    &kp F    &kp G                          &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
                &kp LSHFT   &kp Z    &kp X    &kp C    &kp V    &kp B     &kp PIPE  &encoder_push_dual   &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT

                          &kp LGUI &kp LALT &kp LCTRL &mo LOWER  &kp RET   &kp SPACE   &mo RAISE &kp RCTRL &kp RALT &kp RGUI
            >;

            /* Rotação do encoder(s):
             * 1º = volume up/down
             * 2º = SHIFT + volume up/down (exemplo)
             */
            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp LS(C_VOLUME_UP) LS(C_VOLUME_DOWN)>;
        };

        lower_layer {
            display-name = "lower";

            bindings = <
                &trans    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5              &kp F6    &kp F7   &kp F8    &kp F9    &kp F10   &kp F11
                &kp GRAVE &kp N1   &kp N2    &kp N3    &kp N4    &kp N5              &kp N6    &kp N7   &kp N8    &kp N9    &kp N0    &kp F12
                &trans    &kp EXCL &kp AT    &kp HASH  &kp DLLR  &kp PRCNT           &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR  &kp PIPE
                &trans    &kp EQUAL &kp MINUS &kp PLUS &kp LBRC  &kp RBRC &trans &trans  &kp LBKT &kp RBKT &kp SEMI  &kp COLON &kp BSLH &trans

                         &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans
            >;

            /* Rotação do encoder(s):
             * - 1º = volume up/down
             * - 2º = page up/down
             */
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";

            bindings = <
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4              &trans &trans &trans &trans &trans &trans
                &trans     &kp INS     &kp PSCRN    &kp K_CMENU  &trans       &trans                     &kp PG_UP &trans &kp UP &trans &kp N0 &trans
                &trans     &kp LALT    &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                   &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp DEL &kp BSPC
                &trans     &kp K_UNDO  &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans &kp C_VOL_DN &kp HOME  &kp END  &trans   &trans   &trans &trans

                         &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            display-name = "adjust";

            bindings = <
                &bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4              &none &none &none &none &none &none
                &ext_power EP_TOG  &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF &none &none &none &none &none &none
                &none &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none &none &none                                         &none &none &none &none &none &none
                &none &none &none &none &none &none  &rgb_ug RGB_TOG &none &none &none &none &none &none &none
                       &none &none &none &none &none  &none &none &none &none &none
            >;
        };
    };
};
