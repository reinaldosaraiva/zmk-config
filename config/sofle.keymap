/*
 * sofie.keymap - Configuração modificada para encoder dual-role no push
 *
 * Neste exemplo:
 * - O encoder “push” (antes &sk C_VOLUME_DOWN) foi substituído
 *   pelo comportamento "encoder_push_dual":
 *      • Tap: envia C_VOLUME_DOWN
 *      • Hold: envia PG_DN
 *
 * As rotações (sensor-bindings) permanecem configuradas para:
 * - default_layer: 1º encoder → C_VOL_UP / C_VOL_DN; 2º encoder → LS(C_VOLUME_UP)/LS(C_VOLUME_DOWN)
 * - lower_layer: 1º encoder → C_VOL_UP / C_VOL_DN; 2º encoder → PG_UP / PG_DN
 *
 * Ajuste os keycodes e tempos (tapping-term-ms) conforme sua preferência.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    /* Definição do comportamento dual para o botão do encoder */
    behaviors {
        encoder_push_dual: hold-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "Encoder Push Dual";
            #binding-cells = <0>;
            tapping-term-ms = <200>;  /* Tempo para considerar tap vs. hold (200 ms) */
            /* Ordem dos bindings: [tap, hold]
             * – No tap envia C_VOLUME_DOWN
             * – Se mantido, envia PG_DN
             */
            bindings = <&kp C_VOLUME_DOWN>, <&kp PG_DN>;
        };
    };

    /* Ativação da camada ADJUST quando LOWER e RAISE estão ativas */
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            bindings = <
                /* Linha 1 */
                &kp MINUS  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                    &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp GRAVE
                /* Linha 2 */
                &kp ESC    &kp Q   &kp W     &kp E     &kp R      &kp T                                     &kp Y      &kp U      &kp I      &kp O     &kp P     &kp BSPC
                /* Linha 3 */
                &kp TAB    &kp A   &kp S     &kp D     &kp F      &kp G                                     &kp H      &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
                /* Linha 4 */
                &kp LSHFT  &kp Z   &kp X     &kp C     &kp V      &kp B      &kp PIPE    &encoder_push_dual  &kp N      &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                /* Linha 5 (modificadores e camada) */
                           &kp LGUI  &kp LALT  &kp LCTRL  &mo LOWER  &kp RET     &kp SPACE          &mo RAISE  &kp RCTRL  &kp RALT   &kp RGUI
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp LS(C_VOLUME_UP) LS(C_VOLUME_DOWN)>;
        };

        lower_layer {
            display-name = "lower";

            bindings = <
                /* Linha 1 */
                &trans     &kp F1     &kp F2     &kp F3    &kp F4    &kp F5                       &kp F6     &kp F7    &kp F8     &kp F9     &kp F10   &kp F11
                /* Linha 2 */
                &kp GRAVE  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8     &kp N9     &kp N0    &kp F12
                /* Linha 3 */
                &trans     &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR  &kp PIPE
                /* Linha 4 */
                &trans     &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI   &kp COLON  &kp BSLH  &trans
                           &trans     &trans    &trans    &trans     &trans    &trans  &trans     &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";

            bindings = <
                /* Linha 1 */
                &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                          &trans     &trans    &trans    &trans     &trans   &trans
                /* Linha 2 */
                &trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                                &kp PG_UP  &trans    &kp UP    &trans     &kp N0   &trans
                /* Linha 3 */
                &trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                              &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
                /* Linha 4 */
                &trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &kp C_VOL_DN  &kp HOME   &kp END   &trans    &trans     &trans   &trans
                           &trans        &trans        &trans        &trans        &trans    &trans        &trans     &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            display-name = "adjust";
            bindings = <
                /* Linha 1 */
                &bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
                /* Linha 2 */
                &ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
                /* Linha 3 */
                &none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
                /* Linha 4 */
                &none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                   &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };
    };
};
